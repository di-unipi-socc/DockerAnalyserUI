{
    "version": "3",
    "services": {
       "crawler": {
          "image": "diunipisocc/docker-finder:crawler",
          "build": {
             "context": "analysis/",
             "dockerfile": "Dockerfile_crawler"
          },
          "command": [
             "crawl",
             "--save-url=/data/crawler/lasturl.txt",
             "--amqp-url=amqp://guest:guest@rabbitmq:5672",
             "--images-url=http://images_server:4000/api/images/",
             "--queue=images",
             "--force-page=True",
             "--si=20",
             "--random=False",
             "--fp=10",
             "--ps=100",
             "--policy=stars_first",
             "--min-stars=3",
             "--min-pulls=0",
             "--only-automated"
          ],
          "volumes": [
             "crawler_volume:/data/crawler/"
          ]
       },
       "rabbitmq": {
          "image": "rabbitmq:3.7.3-management",
          "hostname": "rabbitmq",
          "restart": "on-failure:3",
          "ports": [
             "8082:15672"
          ],
          "volumes": [
             "rabbitmq_volume:/var/lib/rabbitmq"
          ]
       },
       "scanner": {
          "image": "diunipisocc/docker-finder:scanner",
          "build": {
             "context": ".",
             "dockerfile": "analysis/Dockerfile_scanner",
             "args": {
                "DEPLOY_PACKAGE_PATH": null
             }
          },
          "command": [
             "run",
             "--images-url=http://images_server:4000/api/images/",
             "--amqp-url=amqp://guest:guest@rabbitmq:5672",
             "--queue=images",
             "--key=images.scan"
          ],
          "deploy": {
             "replicas": 3
          },
          "volumes": [
             "/var/run/docker.sock:/var/run/docker.sock"
          ]
       },
       "images_server": {
          "image": "diunipisocc/docker-finder:images_server",
          "build": "storage/images_server",
          "hostname": "images_server",
          "restart": "on-failure:3",
          "environment": {
             "PORT": 4000
          },
          "ports": [
             "4000:4000"
          ],
          "depends_on": [
             "images_db"
          ]
       },
       "images_db": {
          "image": "mongo:3",
          "restart": "on-failure:3",
          "hostname": "images_db",
          "volumes": [
             "images_db_volume:/data/db"
          ]
       }
    },
    "volumes": {
       "crawler_volume": null,
       "rabbitmq_volume": null,
       "images_db_volume": null
    }
 }