version: "3"

# The docker-compose.yml file defines DockerAnalyser Services
#    1) analysis services: crawler, scanner, rabbitmq,
#    3) storage services: images_server, images_db

services:

  ###############   ANALYSIS PHASE ####################
  crawler:
    image: 127.0.0.1:5000/diunipisocc/docker-finder:crawler
    build:
     context: analysis
     dockerfile: ./Dockerfile_crawler
    command: [crawl,'--save-url=/data/crawler/lasturl.txt',
                    '--amqp-url=amqp://guest:guest@rabbitmq:5672',
                    '--images-url=http://images_server:3000/api/images/',
                    '--queue=images',
                    '--force-page=True',
                    #'--si=10000',
                    '--random=True',
                    '--fp=1',
                    '--ps=100',
                    '--policy=stars_first',
                    '--min-stars=3',
                    '--min-pulls=0',
                    #'--only-official',
                    '--only-automated',

                    ]
    # networks:
    #   - docker-analyser-net
    volumes:
          - crawler_volume:/data/crawler/

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    restart: on-failure:3
    # networks:
    #   - docker-analyser-net
    volumes:
      - rabbitmq_volume:/var/lib/rabbitmq

  scanner:
    image: 127.0.0.1:5000/diunipisocc/docker-finder:scanner
    build:
      context: .
      dockerfile: ./analysis/Dockerfile_scanner
      args:
        DEPLOY_PACKAGE_PATH: ./deploy-package
    command: [run, '--images-url=http://images_server:3000/api/images/',
                  '--queue=images',
                  '--key=images.scan']
    # networks:
    #   - docker-analyser-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

    deploy:
      mode: replicated
      replicas: 10
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure


  # #####################################################
  # ###############   STORAGE PHASE ####################
  # #####################################################
  images_server:
      build: storage/images_server
      image: 127.0.0.1:5000/diunipisocc/docker-finder:images_server
      hostname: images_server
      restart: on-failure:3
      ports:
        - "3000:3000"
      depends_on:
        - images_db
      networks:
        - docker-analyser-net
      deploy:
        restart_policy:
          condition: on-failure

  images_db:
      image: mongo:3
      restart: on-failure:3
      hostname: images_db
      volumes:
        -  images_db_volume:/data/db
      networks:
        - docker-analyser-net
      deploy:
        restart_policy:
          condition: on-failure


volumes:
  crawler_volume:
  rabbitmq_volume:
  images_db_volume:

networks:
  docker-analyser-net:
    external: true
